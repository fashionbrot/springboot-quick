package ${package}.controller;

#if ($dtoStatus)
import ${package}.dto.${className}Dto;
#end
import ${package}.entity.${className}Entity;
import ${package}.service.${className}Service;
import ${package}.req.PageReq;
import ${package}.req.${className}Req;
import ${package}.vo.PageVo;
import ${package}.vo.RespVo;
import ${package}.annotation.MarsPermission;
#if (${swaggerStatus})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import com.github.xiaoymin.knife4j.annotations.ApiSort;
import springfox.documentation.annotations.ApiIgnore;
#end
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.stereotype.Controller;
import javax.servlet.http.HttpServletResponse;
import java.util.List;
import java.util.Map;
import java.util.Arrays;
import java.util.Collection;


/**
 * ${commentsEntity}
 *
 * @author ${author}
 * @email ${email}
 * @date ${date}
 */
#if (${swaggerStatus})
@Api(tags="${commentsApi}")
@ApiSort(${apiSort})
#end
@RequestMapping("/${requestMappingPath}")
@Controller
public class ${className}Controller  {

    /**
     * 权限 注解 MarsPermission
     * 默认接口以下
     * 分页       ${pathName}/pageList    权限：${permissionPrefix}PageList
     * 数据列表    ${pathName}/list        权限：${permissionPrefix}List
     * 根据id查询  ${pathName}/getById     权限：${permissionPrefix}GetById
     * 新增       ${pathName}/insert      权限：${permissionPrefix}Insert
     * 修改       ${pathName}/updateById  权限：${permissionPrefix}UpdateById
     * 根据id删除  ${pathName}/deleteById  权限：${permissionPrefix}DeleteById
     * 多个id删除  ${pathName}/deleteByIds 权限：${permissionPrefix}DeleteByIds
     */


    @Autowired
    public ${className}Service ${classServiceImpl}Service;



    @MarsPermission("${permissionPrefix}PageList")
    @ApiOperation("分页列表")
    @GetMapping("/pageList")
    @ResponseBody
    public RespVo pageList(${className}Req req) {
        return RespVo.success(${classServiceImpl}Service.pageList(req));
    }


    @MarsPermission("${permissionPrefix}List")
    @ApiOperation("数据列表")
    @GetMapping("/list")
    @ResponseBody
    public RespVo list(@RequestParam Map<String, Object> params){
        return  RespVo.success(${classServiceImpl}Service.listByMap(params));
    }


    @MarsPermission("${permissionPrefix}GetById")
    @ApiOperation("根据id查询")
    @PostMapping("/getById")
    @ResponseBody
    public RespVo getById(Long id){
        return RespVo.success(${classServiceImpl}Service.getById(id));
    }

    @MarsPermission("${permissionPrefix}Insert")
    @ApiOperation("新增")
    @PostMapping("/insert")
    @ResponseBody
    public RespVo insert(@RequestBody ${className}Entity entity){
        ${classServiceImpl}Service.save(entity);
        return RespVo.success();
    }


    @MarsPermission("${permissionPrefix}updateById")
    @ApiOperation("修改")
    @PostMapping("/updateById")
    @ResponseBody
    public RespVo updateById(@RequestBody ${className}Entity entity){
        ${classServiceImpl}Service.updateById(entity);
        return RespVo.success();
    }


    @MarsPermission("${permissionPrefix}DeleteById")
    @ApiOperation("根据id删除")
    @PostMapping("/deleteById")
    @ResponseBody
    public RespVo deleteById(Long id){
        ${classServiceImpl}Service.removeById(id);
        return RespVo.success();
    }


    @MarsPermission("${permissionPrefix}DeleteByIds")
    @ApiOperation("批量删除")
    @PostMapping("/deleteByIds")
    @ResponseBody
    public RespVo deleteByIds(Long[] ids){
        ${classServiceImpl}Service.removeByIds(Arrays.asList(ids));
        return RespVo.success();
    }



}